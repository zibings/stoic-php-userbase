CREATE TABLE `User` (
	`ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`Name` NVARCHAR(128) NOT NULL,
	`Email` NVARCHAR(250) NOT NULL,
	`EmailConfirmed` TINYINT UNSIGNED NOT NULL DEFAULT '0',
	`DateJoined` DATETIME NOT NULL,
	`LastLogin` DATETIME NULL,
	PRIMARY KEY (`ID`),
	CONSTRAINT `IX_User_Username` UNIQUE(`Username`),
	CONSTRAINT `IX_User_Email` UNIQUE(`Email`)
);

CREATE TABLE `Role` (
	`ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`Name` NVARCHAR(125) NOT NULL,
	PRIMARY KEY (`ID`),
	CONSTRAINT `IX_RoleName` UNIQUE(`Name`)
);

INSERT INTO `Role` (`Name`) VALUES ('Administrator');

CREATE TABLE `UserRole` (
	`UserID` INT UNSIGNED NOT NULL,
	`RoleID` INT UNSIGNED NOT NULL,
	FOREIGN KEY `FK_UserRoleUser` (`UserID`) REFERENCES `User` (`ID`) ON UPDATE CASCADE ON DELETE RESTRICT,
	FOREIGN KEY `FK_UserRoleRole` (`RoleID`) REFERENCES `User` (`ID`) ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE TABLE `LoginKey` (
	`UserID` INT UNSIGNED NOT NULL,
	`Provider` TINYINT UNSIGNED NOT NULL,
	`Key` NVARCHAR(512) NOT NULL,
	FOREIGN KEY `FK_LoginKeyUser` (`UserID`) REFERENCES `User` (`ID`)	ON UPDATE CASCADE ON DELETE RESTRICT
);

CREATE INDEX `IX_LoginKey_UserID` ON `LoginKey` (`UserID`);

CREATE TABLE `UserSession` (
	`ID` INT UNSIGNED NOT NULL AUTO_INCREMENT,
	`UserID` INT UNSIGNED NOT NULL,
	`Token` NVARCHAR(256) NOT NULL,
	`Hostname` NVARCHAR(256) NOT NULL,
	`Address` NVARCHAR(256) NOT NULL,
	`Created` DATETIME NOT NULL,
	PRIMARY KEY (`ID`),
	FOREIGN KEY `FK_UserSessionUser` (`UserID`) REFERENCES `User` (`ID`)	ON UPDATE CASCADE ON DELETE RESTRICT,
	CONSTRAINT `IX_UserSessionToken` UNIQUE(`UserID`, `Token`)
);

CREATE INDEX `IX_Session_UserID` ON `UserSession` (`UserID`);
CREATE INDEX `IX_Session_UserID_Token` ON `UserSession` (`UserID`, `Token`);

CREATE TABLE `UserToken` (
	`UserID` INT UNSIGNED NOT NULL,
	`Token` NVARCHAR(128) NULL,
	`Created` DATETIME NOT NULL,
	`Purpose` VARCHAR(10) NOT NULL
);

CREATE INDEX `UserToken_User` ON `UserToken` (`UserID`);
CREATE INDEX `UserToken_Token` ON `UserToken` (`Token`);